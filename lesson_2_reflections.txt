Q: What happens when you initialize a repository? Why do you need to do it?

Git creates a hidden directory for tracking purposes. This is necessary in order to 
create commits.

Q: How is the staging area different from the working directory and the repository? 
What value do you think it offers?

The staging area is a temporary transfer point between a file being a regular file 
in a directory and being a tracked file in a repository. It allows you to decide 
exactly which files will be tracked in a project.

Q: How can you use the staging area to make sure you have one commit per logical change?

By moving only the files(s) that contain the changes to the staging area before committing.

Q: What are some situations when branches would be helpful in keeping your history organized? 
How would branches help?

When you need to create a version of your project that does something different to the original
version while keeping the history of the original version intact. Branches are like copies of repositories
allowing you to make changes to the copy without touching the original.

Q: How do the diagrams help you visualize the branch structure?

Diagrams show you the point when new branches were created and what commits they have in common
with existing branches.

Q: What is the result of merging two branches together? 
Why do we represent it in the diagram the way we do?

Merging two branches together brings all the changes and history from each branch into the 'merge host'
so that all version of the documents from both branches are accessible under the main label. The changes are
best represented in the diagram to show where the branches separated and rejoined and what took place when.

Q: What are the pros and cons of Gitâ€™s automatic merging vs. always doing merges manually?
Time saving with automatic merging but risking Git keeping the wrong changes.

